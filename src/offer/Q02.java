package offer;

/**
 * @author Jack
 * @version 1.0
 * @date 2020/6/10 13:51
 */
//在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
//
public class Q02 {
    public static void main(String[] args) {
        Q02 q02 = new Q02();
        int [][] test = new int[][]{{1,2,3,4},{5,6,7,8},{9,10,11,12}};
        boolean numberIn2DArray = q02.findNumberIn2DArray(test, 13);
        System.out.println(numberIn2DArray);
    }

    public boolean findNumberIn2DArray(int[][] matrix, int target) {
        //注意  需要判断一波
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return false;
        }
        //定义双指针
        int i = 0;
        int j = (matrix[0].length) - 1;
        while (matrix[i][j] != target) {
            if (target > matrix[i][j]) {
                //向下
                i++;
                if (i>=matrix.length){
                    return false;
                }
            }else {
                j--;
                if (j<0){
                    return false;
                }
            }

        }
        return true;
    }
}
